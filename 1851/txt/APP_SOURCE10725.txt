[{ "key": "160~WFT_OSPS_P_1304_1516612835803_0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$160$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516612276286~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517043165280", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1516612276286$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517043165280$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516775196898~DT_1304_1515496516569~DTT_1304_1515501155184~DS_1516776453021", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1516775196898$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501155184$DQ$, $DQ$DS_1516776453021$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516779949388~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1516798501355", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1516779949388$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1516798501355$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216248448~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216597766", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1517216248448$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517216597766$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216300567~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216645205", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1517216300567$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517216645205$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216478799~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216626510", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1517216478799$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517216626510$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517466362909~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517466491679", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$, $DQ$E_1517466362909$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517466491679$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$160$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516773916375~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208815495", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516773916375$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517208815495$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516773916375~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208823591", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516773916375$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517208823591$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516774142394~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208747546", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516774142394$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517208747546$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516774142394~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208763656", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516774142394$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517208763656$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516787746732~DT_1304_1515496516569~DTT_1304_1515501155184~DS_1516791453421", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516787746732$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501155184$DQ$, $DQ$DS_1516791453421$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516787822029~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1516791429150", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1516787822029$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1516791429150$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218210920~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218463408", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1517218210920$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517218463408$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218242977~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218449505", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1517218242977$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517218449505$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218276976~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218429281", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1517218276976$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515501648789$DQ$, $DQ$DS_1517218429281$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517469498419~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517470057454", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1517469498419$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517470057454$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517469498419~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517470064093", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$, $DQ$E_1517469498419$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517470064093$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [$DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$, $DQ$160$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517816743809~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517820913761", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$, $DQ$E_1517816743809$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517820913761$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517816813433~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517820890755", "target" : "QRY_INFO", "content" :"{ \"query\" : \"DELETE FROM QRY_INFO WHERE APP_id=? AND WFTPA_ID=? AND EVENT_CODE=? AND DT_CODE=? AND DTT_CODE=? AND DS_CODE=? AND PROCESS=?\", \"params\" : [$DQ$160$DQ$, $DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$, $DQ$E_1517816813433$DQ$, $DQ$DT_1304_1515496516569$DQ$, $DQ$DTT_1304_1515500755259$DQ$, $DQ$DS_1517820890755$DQ$, $DQ$WF_SELECT$DQ$] }", "qry_type" : "D"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516612276286~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517043165280~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$,$DQ$DS_1517043165280$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YEAR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 EDIT_TARGET,                 R1_TAB,                 R2_TAB,                 R3_TAB,                 R1_SAVE,                 R2_SAVE,                 R3_SAVE,                 REVISION_STATUS,                 PROCESS_STATUS,                 DST_SYSTEM_ID,                 SYSTEM_ID FROM   (SELECT DISTINCT OCT.OSP_CT_ID,                    OCT.DST_SYSTEM_CODE,                    OCT.DST_SYSTEM_DESCRIPTION,                    OCT.MONTH_YEAR,                    TO_CHAR(OCT.MONTH_YEAR, $SQ$Mon-YYYY$SQ$) AS MON_YEAR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$CREATED$SQ$                             AND CP_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$ THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END EDIT_TARGET,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND (CP_REVISED1_QTY IS NULL                                  OR CP_REVISED1_QTY IS NOT NULL)                             AND (UP_REVISED1_QTY IS NULL                                  OR UP_REVISED1_QTY IS NOT NULL)                             AND CP_REVISED2_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND (CP_REVISED2_QTY IS NULL                                  OR CP_REVISED2_QTY IS NOT NULL)                             AND (UP_REVISED2_QTY IS NULL                                  OR UP_REVISED2_QTY IS NOT NULL)                             AND CP_REVISED3_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND (CP_REVISED3_QTY IS NULL                                  OR CP_REVISED3_QTY IS NOT NULL)                             AND (UP_REVISED3_QTY IS NULL                                  OR UP_REVISED3_QTY IS NOT NULL) THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_SAVE,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END REVISION_STATUS,                    OUTD.CP_QTY,                    OUTD.PERIOD,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    LEFT JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW $WHERE ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516612276286$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516775196898~DT_1304_1515496516569~DTT_1304_1515501155184~DS_1516776453021~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$,$DQ$DS_1516776453021$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT OSP_UNIT_TA_HDR_ID,         OSP_CT_ID,         CP_REVISED0_QTY,          CP_REVISED2_QTY,         UP_REVISED0_QTY,         UP_REVISED0_COMMENT,         CP_REVISED1_QTY,         CP_REVISED1_COMMENT,         UP_REVISED1_QTY,         CP_REVISED0_COMMENT,         UP_REVISED1_COMMENT,         CP_REVISED2_COMMENT,         UP_REVISED2_QTY,         UP_REVISED2_COMMENT,         CP_REVISED3_QTY,         CP_REVISED3_COMMENT,         UP_REVISED3_QTY,         UP_REVISED3_COMMENT,                 DT_CODE,         DT_DESCRIPTION,         DTT_CODE,         DTT_DESCRIPTION,                 PRCT_ID,         STATUS,         PROCESS_STATUS,         SYSTEM_ID,         SYSTEM_NAME  FROM   OSP_UNIT_TA_HEADERS $WHERE$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516775196898$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515501155184$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516779949388~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1516798501355~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516856807682~WF_UPDATE~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517209247572~0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$,$DQ$DS_1517209247572$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$MPP$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$SEND_TO_UP$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$ AND DT_CODE= $SQ$DT_1304_1515496516569$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$U$DQ$,$DQ$ UPDATE OSP_CORP_TARGETS  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$MPP$SQ$,PROCESS_STATUS  = $SQ$SEND_TO_UP$SQ$ WHERE OSP_CT_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$160$DQ$,$DQ$0$DQ$,$DQ$E_1516856807682$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$WF_UPDATE$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1516856852825~WF_UPDATE~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517209235004~0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$,$DQ$DS_1517209235004$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$MPP$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACCEPTED$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$ AND DT_CODE= $SQ$DT_1304_1515496516569$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$U$DQ$,$DQ$ UPDATE OSP_CORP_TARGETS  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$MPP$SQ$,PROCESS_STATUS  = $SQ$ACCEPTED$SQ$ WHERE OSP_CT_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$160$DQ$,$DQ$0$DQ$,$DQ$E_1516856852825$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$WF_UPDATE$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216248448~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216597766~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216300567~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216645205~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517216478799~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517216626510~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516612835803_0~E_1517466362909~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517466491679~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516612835803_0$DQ$,$DQ$DS_1517466491679$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YEAR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 EDIT_TARGET,                 R1_TAB,                 R2_TAB,                 R3_TAB,                 R1_SAVE,                 R2_SAVE,                 R3_SAVE,                 REVISION_STATUS,                 PROCESS_STATUS,                 DST_SYSTEM_ID,                 SYSTEM_ID FROM   (SELECT DISTINCT OCT.OSP_CT_ID,                    OCT.DST_SYSTEM_CODE,                    OCT.DST_SYSTEM_DESCRIPTION,                    OCT.MONTH_YEAR,                    TO_CHAR(OCT.MONTH_YEAR, $SQ$Mon-YYYY$SQ$) AS MON_YEAR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$CREATED$SQ$                             AND CP_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$ THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END EDIT_TARGET,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND (CP_REVISED1_QTY IS NULL                                  OR CP_REVISED1_QTY IS NOT NULL)                             AND (UP_REVISED1_QTY IS NULL                                  OR UP_REVISED1_QTY IS NOT NULL)                             AND CP_REVISED2_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND (CP_REVISED2_QTY IS NULL                                  OR CP_REVISED2_QTY IS NOT NULL)                             AND (UP_REVISED2_QTY IS NULL                                  OR UP_REVISED2_QTY IS NOT NULL)                             AND CP_REVISED3_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND (CP_REVISED3_QTY IS NULL                                  OR CP_REVISED3_QTY IS NOT NULL)                             AND (UP_REVISED3_QTY IS NULL                                  OR UP_REVISED3_QTY IS NOT NULL) THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_SAVE,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END REVISION_STATUS,                    OUTD.CP_QTY,                    OUTD.PERIOD,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    LEFT JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW $WHERE ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1517466362909$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516773916375~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208815495~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517208815495$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_statuson-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516773916375$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516773916375~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208823591~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517208823591$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_statuson-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516773916375$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516774142394~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208747546~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517208747546$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_statuson-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516774142394$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516774142394~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208763656~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517208763656$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_status,                 PROCESS_STATUS,                 CASE                     WHEN PROCESS_STATUS=$SQ$ACCEPTED$SQ$ THEN $SQ$ENABLE$SQ$                     WHEN PROCESS_STATUS=$SQ$SEND_TO_UP$SQ$ THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END EN_DISABLE,                 CASE                     WHEN CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END TAB_R1,                 CASE                     WHEN CP_REVISED2_QTY IS NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END TAB_R2,                 CASE                     WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END TAB_R3,                 CASE                     WHEN CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END R1_TAB,                 CASE                     WHEN CP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END R2_TAB,                 CASE                     WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                     ELSE $SQ$DISABLE$SQ$                 END R3_TAB,                 CASE                        WHEN PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$ AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL AND CP_REVISED1_QTY IS NULL                             THEN $SQ$ENABLE$SQ$                             ELSE $SQ$DISABLE$SQ$                    END R0_SAVE,                 CASE                        WHEN PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$ AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL AND CP_REVISED2_QTY IS NULL                             THEN $SQ$ENABLE$SQ$                             ELSE $SQ$DISABLE$SQ$                    END R1_SAVE,                    CASE                        WHEN PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                              AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NULL                             THEN $SQ$ENABLE$SQ$                             ELSE $SQ$DISABLE$SQ$                    END R2_SAVE,                    CASE                        WHEN PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                              AND CP_REVISED3_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NOT NULL                             THEN $SQ$ENABLE$SQ$                             ELSE $SQ$DISABLE$SQ$                    END R3_SAVE,                 DST_SYSTEM_ID,                 SYSTEM_ID FROM   (SELECT DISTINCT OCT.OSP_CT_ID,                    OCT.DST_SYSTEM_CODE,                    OCT.DST_SYSTEM_DESCRIPTION,                    OCT.MONTH_YEAR,                    TO_CHAR(OCT.MONTH_YEAR,$SQ$Mon-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516774142394$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516787746732~DT_1304_1515496516569~DTT_1304_1515501155184~DS_1516791453421~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1516791453421$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT OSP_UNIT_TA_HDR_ID,         OSP_CT_ID,         CP_REVISED0_QTY,          CP_REVISED2_QTY,         UP_REVISED0_QTY,         UP_REVISED0_COMMENT,         CP_REVISED1_QTY,         CP_REVISED1_COMMENT,         UP_REVISED1_QTY,         CP_REVISED0_COMMENT,         UP_REVISED1_COMMENT,         CP_REVISED2_COMMENT,         UP_REVISED2_QTY,         UP_REVISED2_COMMENT,         CP_REVISED3_QTY,         CP_REVISED3_COMMENT,         UP_REVISED3_QTY,         UP_REVISED3_COMMENT,                 DT_CODE,         DT_DESCRIPTION,         DTT_CODE,         DTT_DESCRIPTION,                 PRCT_ID,         STATUS,         PROCESS_STATUS,         SYSTEM_ID,         SYSTEM_NAME  FROM   OSP_UNIT_TA_HEADERS $WHERE$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1516787746732$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515501155184$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516787822029~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1516791429150~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1516857092453~WF_UPDATE~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517208802176~0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517208802176$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$MPP$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$SEND_TO_CP$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$ AND DT_CODE= $SQ$DT_1304_1515496516569$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$U$DQ$,$DQ$ UPDATE OSP_CORP_TARGETS  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$MPP$SQ$,PROCESS_STATUS  = $SQ$SEND_TO_CP$SQ$ WHERE OSP_CT_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$160$DQ$,$DQ$0$DQ$,$DQ$E_1516857092453$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$WF_UPDATE$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218210920~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218463408~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218242977~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218449505~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517218276976~DT_1304_1515496516569~DTT_1304_1515501648789~DS_1517218429281~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params}", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517469498419~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517470057454~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517470057454$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_statuson-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1517469498419$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1516774195954_0~E_1517469498419~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517470064093~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1516774195954_0$DQ$,$DQ$DS_1517470064093$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 Revision_statuson-YYYY$SQ$) AS MON_YR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID,                    OUTH.CP_REVISED1_QTY,                   OUTH.CP_REVISED0_QTY,                    OUTH.CP_REVISED2_QTY,                    OUTH.CP_REVISED3_QTY,                     OUTH.UP_REVISED0_QTY,                     OUTH.UP_REVISED1_QTY,                    OUTH.UP_REVISED2_QTY,                    OUTH.UP_REVISED3_QTY,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END Revision_status    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    INNER JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW    WHERE (  (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$) OR (STATUS = $SQ$MPP$SQ$  AND  PROCESS_STATUS = $SQ$ACCEPTED$SQ$))$AND ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1517469498419$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517816743809~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517820913761~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$,$DQ$DS_1517820913761$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YEAR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 EDIT_TARGET,                 R1_TAB,                 R2_TAB,                 R3_TAB,                 R1_SAVE,                 R2_SAVE,                 R3_SAVE,                 REVISION_STATUS,                 PROCESS_STATUS,                 DST_SYSTEM_ID,                 SYSTEM_ID FROM   (SELECT DISTINCT OCT.OSP_CT_ID,                    OCT.DST_SYSTEM_CODE,                    OCT.DST_SYSTEM_DESCRIPTION,                    OCT.MONTH_YEAR,                    TO_CHAR(OCT.MONTH_YEAR, $SQ$Mon-YYYY$SQ$) AS MON_YEAR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$CREATED$SQ$                             AND CP_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$ THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END EDIT_TARGET,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND (CP_REVISED1_QTY IS NULL                                  OR CP_REVISED1_QTY IS NOT NULL)                             AND (UP_REVISED1_QTY IS NULL                                  OR UP_REVISED1_QTY IS NOT NULL)                             AND CP_REVISED2_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND (CP_REVISED2_QTY IS NULL                                  OR CP_REVISED2_QTY IS NOT NULL)                             AND (UP_REVISED2_QTY IS NULL                                  OR UP_REVISED2_QTY IS NOT NULL)                             AND CP_REVISED3_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND (CP_REVISED3_QTY IS NULL                                  OR CP_REVISED3_QTY IS NOT NULL)                             AND (UP_REVISED3_QTY IS NULL                                  OR UP_REVISED3_QTY IS NOT NULL) THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_SAVE,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END REVISION_STATUS,                    OUTD.CP_QTY,                    OUTD.PERIOD,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    LEFT JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW $WHERE ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1517816743809$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517816813433~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517820890755~1", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$,$DQ$DS_1517820890755$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT OSP_CT_ID,                 DST_SYSTEM_CODE,                 DST_SYSTEM_DESCRIPTION,                 MONTH_YEAR,                 MON_YEAR,                 ORDER_TYPE,                 FG_GROUP,                 ITEM_CODE,                 PLANNED_QTY_COMMENT,                 PLANNED_QTY,                 UOM,                 DUE_DATE,                 PLANNED_DATE,                 FINISHED_QTY,                 ITEM_NAME,                 DT_CODE,                 DT_DESCRIPTION,                 DTT_CODE,                 DTT_DESCRIPTION,                 PRCT_ID,                 STATUS,                 EDIT_TARGET,                 R1_TAB,                 R2_TAB,                 R3_TAB,                 R1_SAVE,                 R2_SAVE,                 R3_SAVE,                 REVISION_STATUS,                 PROCESS_STATUS,                 DST_SYSTEM_ID,                 SYSTEM_ID FROM   (SELECT DISTINCT OCT.OSP_CT_ID,                    OCT.DST_SYSTEM_CODE,                    OCT.DST_SYSTEM_DESCRIPTION,                    OCT.MONTH_YEAR,                    TO_CHAR(OCT.MONTH_YEAR, $SQ$Mon-YYYY$SQ$) AS MON_YEAR,                    OCT.ORDER_TYPE,                    OCT.FG_GROUP,                    OCT.ITEM_CODE,                    OCT.PLANNED_QTY_COMMENT,                    OCT.PLANNED_QTY,                    OCT.UOM,                    OCT.DUE_DATE,                    TO_CHAR(OCT.DUE_DATE, $SQ$DD-MM-YYYY$SQ$) AS PLANNED_DATE,                    OCT.FINISHED_QTY,                    OCT.ITEM_NAME,                    OCT.DT_CODE,                    OCT.DT_DESCRIPTION,                    OCT.DTT_CODE,                    OCT.DTT_DESCRIPTION,                    OCT.PRCT_ID,                    OCT.STATUS,                    OCT.PROCESS_STATUS,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$CREATED$SQ$                             AND CP_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$ THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END EDIT_TARGET,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_UP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        WHEN OCT.PROCESS_STATUS = $SQ$ACCEPTED$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED3_QTY IS NOT NULL                             AND UP_REVISED3_QTY IS NOT NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_TAB,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND (CP_REVISED1_QTY IS NULL                                  OR CP_REVISED1_QTY IS NOT NULL)                             AND (UP_REVISED1_QTY IS NULL                                  OR UP_REVISED1_QTY IS NOT NULL)                             AND CP_REVISED2_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R1_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND (CP_REVISED2_QTY IS NULL                                  OR CP_REVISED2_QTY IS NOT NULL)                             AND (UP_REVISED2_QTY IS NULL                                  OR UP_REVISED2_QTY IS NOT NULL)                             AND CP_REVISED3_QTY IS NULL THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R2_SAVE,                    CASE                        WHEN OCT.PROCESS_STATUS = $SQ$SEND_TO_CP$SQ$                             AND CP_REVISED0_QTY IS NOT NULL                             AND UP_REVISED0_QTY IS NOT NULL                             AND CP_REVISED1_QTY IS NOT NULL                             AND UP_REVISED1_QTY IS NOT NULL                             AND CP_REVISED2_QTY IS NOT NULL                             AND UP_REVISED2_QTY IS NOT NULL                             AND (CP_REVISED3_QTY IS NULL                                  OR CP_REVISED3_QTY IS NOT NULL)                             AND (UP_REVISED3_QTY IS NULL                                  OR UP_REVISED3_QTY IS NOT NULL) THEN $SQ$ENABLE$SQ$                        ELSE $SQ$DISABLE$SQ$                    END R3_SAVE,                    CASE                        WHEN CP_REVISED1_QTY IS NULL THEN $SQ$Revision 0$SQ$                        WHEN CP_REVISED2_QTY IS NULL THEN $SQ$Revision 1$SQ$                        WHEN CP_REVISED3_QTY IS NULL THEN $SQ$Revision 2$SQ$                        WHEN CP_REVISED3_QTY IS NOT NULL THEN $SQ$Revision 3$SQ$                    END REVISION_STATUS,                    OUTD.CP_QTY,                    OUTD.PERIOD,                    OCT.DST_SYSTEM_ID,                    OCT. SYSTEM_ID    FROM OSP_CORP_TARGETS OCT    INNER JOIN OSP_UNIT_TA_HEADERS OUTH ON OUTH.OSP_CT_ID = OCT.OSP_CT_ID    LEFT JOIN OSP_UNIT_TA_DETAILS OUTD ON OUTD.OSP_UNIT_TA_HDR_ID = OUTH.OSP_UNIT_TA_HDR_ID)VW $WHERE ORDER BY OSP_CT_ID DESC$DQ$,$DQ$160$DQ$,$DQ$1$DQ$,$DQ$E_1517816813433$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$DST_CUR_CLUSTER_ALL_SYS$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517820991153~WF_UPDATE~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517821387636~0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$,$DQ$DS_1517821387636$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$MPP$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$SEND_TO_UP$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$ AND DT_CODE= $SQ$DT_1304_1515496516569$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$U$DQ$,$DQ$ UPDATE OSP_CORP_TARGETS  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$MPP$SQ$,PROCESS_STATUS  = $SQ$SEND_TO_UP$SQ$ WHERE OSP_CT_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$160$DQ$,$DQ$0$DQ$,$DQ$E_1517820991153$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$WF_UPDATE$DQ$] }", "qry_type" : "I"  },{ "key": "160~WFT_OSPS_P_1304_1517820769178_0~E_1517821024817~WF_UPDATE~DT_1304_1515496516569~DTT_1304_1515500755259~DS_1517821379230~0", "target" : "QRY_INFO", "content" :"{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE, MAIN_QRY_TEXT,MAIN_QRY_TYPE, TRN_QRY_TEXT, APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,PROCESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_OSPS_P_1304_1517820769178_0$DQ$,$DQ$DS_1517821379230$DQ$,$DQ$A$DQ$,$DQ$ UPDATE TRANSACTION_SET  SET  STATUS = $SQ$MPP$SQ$,   STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$  , PROCESS_STATUS  = $SQ$ACCEPTED$SQ$ , PROCESS_STATUS_MODIFIED_BY= $SQ$$UID$SQ$ ,PROCESS_STATUS_MODIFIED_DATE = $SQ$$CURRENT_DATE$SQ$   ,PRCT_ID=$SQ$$PRCT_ID$SQ$,MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  WHERE  DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$ AND DT_CODE= $SQ$DT_1304_1515496516569$SQ$ AND TS_ID IN ( SELECT TS_ID FROM TMP_FINAL_ITEMS  TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$U$DQ$,$DQ$ UPDATE OSP_CORP_TARGETS  SET   PRCT_ID=$SQ$$PRCT_ID$SQ$, MODIFIED_BY= $SQ$$UID$SQ$,MODIFIED_DATE= $SQ$$CURRENT_DATE$SQ$ , MODIFIED_BY_NAME=$SQ$$LOGIN_NAME$SQ$  ,STATUS = $SQ$MPP$SQ$,PROCESS_STATUS  = $SQ$ACCEPTED$SQ$ WHERE OSP_CT_ID  IN ( SELECT TRN_ID FROM TMP_FINAL_ITEMS TFI where TFI.DTT_CODE = $SQ$DTT_1304_1515500755259$SQ$)$DQ$,$DQ$160$DQ$,$DQ$0$DQ$,$DQ$E_1517821024817$DQ$,$DQ$DT_1304_1515496516569$DQ$,$DQ$DTT_1304_1515500755259$DQ$,$DQ$WF_UPDATE$DQ$] }", "qry_type" : "I"  }]